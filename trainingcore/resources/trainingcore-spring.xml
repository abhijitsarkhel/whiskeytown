<?xml version="1.0" encoding="UTF-8"?>
<!-- [y] hybris Platform Copyright (c) 2000-2013 hybris AG All rights reserved.
	This software is the confidential and proprietary information of hybris ("Confidential
	Information"). You shall not disclose such Confidential Information and shall
	use it only in accordance with the terms of the license agreement you entered
	into with hybris. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- The hybris platform provides one single Spring application context
		for beans located at the jalo layer. Each extension can add beans to this
		context by specifying them at this configuration file. You can use and/or
		redefine beans defined at configuration files of other extensions as well
		as adding new one. If you want to locate this file at a different location
		or want to use several files for better, structuring, please use the '<yourextension>.application-context'
		property at your project.properties file. There you can specify a comma separated
		list of files where first is tried to find a file per classpath and then
		per file system. If you want to configure beans for your web module please
		have a look at your web/webroot/WEB-INF/<extname>-web-spring.xml. -->

	<!-- Example how to override a manager -->
	<!-- <bean id="core.productManager" class="org.training.jalo.TrainingcoreProductManager"
		init-method="init" destroy-method="destroy" /> -->


	<!-- Example how to configure the class to use for jalo session creation -->
	<!-- <bean id="jalosession" class="de.hybris.platform.jalo.JaloSessionFactory">
		<property name="targetClassName" value="org.training.jalo.TrainingcoreJaloSession"/>
		</bean> -->


	<!-- Example how to override an item -->
	<!-- <bean id="de.hybris.platform.jalo.product.Product" class="org.training.jalo.TrainingcoreProduct"
		scope="prototype" /> -->

	<!-- Example how to register and use an AOP aspect Also see http://static.springframework.org/spring/docs/2.5.x/reference/aop.html -->

	<!-- <bean id="trainingcoreProfBean" class="org.training.aop.TrainingcoreProfilingAspect"/>
		<aop:config proxy-target-class="true"> <aop:aspect id="trainingcoreProfAspect"
		ref="trainingcoreProfBean" > <aop:pointcut id="profiledMethods" expression="execution(*
		getModificationTime(..))" /> <aop:around pointcut-ref="profiledMethods" method="profile"
		/> </aop:aspect> </aop:config> -->


	<!-- some other examples of a pointcut that matches everything: <aop:pointcut
		id="profiledMethods" expression="bean(de.hybris.platform.jalo.user.Customer)
		&amp;&amp; !execution(* getPK(..))" /> <aop:pointcut id="profiledMethods"
		expression="execution(* *(..))" /> -->
	<!-- Spring Integration -->
	<import
		resource="classpath:/trainingcore/integration/hot-folder-common-spring.xml" />

	<!-- SystemSetup for the TrainingCore -->
	<bean id="acceleratorCoreSystemSetup" class="org.training.core.setup.CoreSystemSetup"
		parent="abstractCoreSystemSetup" />

	<!-- Solr field value providers -->


	<bean id="abstractCategoryCodeValueProvider" abstract="true"
		class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryCodeValueProvider"
		parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider" />
		<property name="commonI18NService" ref="commonI18NService" />
	</bean>
	<bean id="abstractCategoryNameValueProvider" abstract="true"
		class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryNameValueProvider"
		parent="abstractPropertyFieldValueProvider">
		<property name="fieldNameProvider" ref="solrFieldNameProvider" />
		<property name="commonI18NService" ref="commonI18NService" />
	</bean>

	<bean id="image515ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="515Wx515H" />
	</bean>
	<bean id="image300ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="300Wx300H" />
	</bean>
	<bean id="image96ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="96Wx96H" />
	</bean>
	<bean id="image65ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="65Wx65H" />
	</bean>
	<bean id="image30ValueProvider" parent="abstractImageValueProvider">
		<property name="mediaFormat" value="30Wx30H" />
	</bean>

	<bean id="productUrlValueProvider"
		class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.ProductUrlValueProvider"
		parent="abstractPropertyFieldValueProvider">
		<property name="urlResolver" ref="productModelUrlResolver" />
		<property name="fieldNameProvider" ref="solrFieldNameProvider" />
		<property name="i18nService" ref="i18nService" />
		<property name="commonI18NService" ref="commonI18NService" />
	</bean>

	<bean id="promotionCodeValueProvider"
		class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PromotionCodeValueProvider"
		parent="abstractPropertyFieldValueProvider">
		<property name="promotionsService" ref="promotionsService" />
		<property name="fieldNameProvider" ref="solrFieldNameProvider" />
	</bean>

	<bean id="promotionImageValueProvider"
		class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.PrimaryPromotionImageValueProvider"
		parent="abstractPropertyFieldValueProvider">
		<property name="promotionsService" ref="promotionsService" />
		<property name="fieldNameProvider" ref="solrFieldNameProvider" />
	</bean>

	<!-- Event listeners are singletons, therefore the dependency for a bean
		in tenant-scope must be configured with a lookup method. -->
	<bean id="orderCancelledEventListener" class="org.training.core.event.OrderCancelledEventListener"
		parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="orderRefundEventListener" class="org.training.core.event.OrderRefundEventListener"
		parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="customerRegistrationEventListener" class="org.training.core.event.RegistrationEventListener"
		parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="forgottenPasswordEventListener"
		class="org.training.core.event.ForgottenPasswordEventListener"
		parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="submitOrderEventListener" class="org.training.core.event.SubmitOrderEventListener"
		parent="abstractSiteEventListener">
		<property name="businessProcessService" ref="businessProcessService" />
		<property name="modelService" ref="modelService" />
		<property name="baseStoreService" ref="baseStoreService" />
	</bean>
	<bean id="orderConfirmationEventListener"
		class="org.training.core.event.OrderConfirmationEventListener"
		parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="sendDeliveryMessageEventListener"
		class="org.training.core.event.SendDeliveryMessageEventListener"
		parent="abstractEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="sendReadyForPickupMessageEventListener"
		class="org.training.core.event.SendReadyForPickupMessageEventListener"
		parent="abstractEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="sendOrderPartiallyCanceledMessageEventListener"
		class="org.training.core.event.SendOrderPartiallyCanceledMessageEventListener"
		parent="abstractEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="sendOrderPartiallyRefundedMessageEventListener"
		class="org.training.core.event.SendOrderPartiallyRefundedMessageEventListener"
		parent="abstractEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="sendNotPickedUpConsignmentCanceledMessageEventListener"
		class="org.training.core.event.SendNotPickedUpConsignmentCanceledMessageEventListener"
		parent="abstractEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>
	<bean id="orderCompletedEventListener" class="org.training.core.event.OrderCompletedEventListener"
		parent="abstractSiteEventListener">
		<property name="modelService" ref="modelService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>

	<!-- Process resources definition -->

	<bean id="customerRegistrationEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/customerRegistrationEmailProcess.xml" />
	</bean>
	<bean id="forgottenPasswordEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/forgottenPasswordEmailProcess.xml" />
	</bean>
	<bean id="orderConfirmationEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/orderConfirmationEmailProcess.xml" />
	</bean>
	<bean id="sendDeliveryEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/sendDeliveryEmailProcess.xml" />
	</bean>
	<bean id="sendReadyForPickupEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/sendReadyForPickupEmailProcess.xml" />
	</bean>
	<bean id="sendOrderCancelledEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/sendOrderCancelledEmailProcess.xml" />
	</bean>
	<bean id="sendOrderRefundEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/sendOrderRefundEmailProcess.xml" />
	</bean>
	<bean id="sendOrderPartiallyCanceledEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/sendOrderPartiallyCanceledEmailProcess.xml" />
	</bean>
	<bean id="sendOrderPartiallyRefundedEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/sendOrderPartiallyRefundedEmailProcess.xml" />
	</bean>
	<bean
		id="sendNotPickedUpConsignmentCanceledEmailProcessDefinitionResource"
		class="de.hybris.platform.processengine.definition.ProcessDefinitionResource">
		<property name="resource"
			value="classpath:/trainingcore/processes/sendNotPickedUpConsignmentCanceledEmailProcess.xml" />
	</bean>

	<!-- Actions -->
	<bean id="abstractAction" class="de.hybris.platform.processengine.action.AbstractAction"
		abstract="true">
		<property name="modelService" ref="modelService" />
		<property name="processParameterHelper" ref="processParameterHelper" />
	</bean>

	<bean id="sendEmail"
		class="de.hybris.platform.acceleratorservices.process.email.actions.SendEmailAction"
		parent="abstractAction">
		<property name="emailService" ref="emailService" />
	</bean>

	<bean id="abstractGenerateEmailAction"
		class="de.hybris.platform.acceleratorservices.process.email.actions.GenerateEmailAction"
		parent="abstractAction" abstract="true">
		<property name="modelService" ref="modelService" />
		<property name="cmsEmailPageService" ref="cmsEmailPageService" />
		<property name="contextResolutionStrategy" ref="processContextResolutionStrategy" />
		<property name="emailGenerationService" ref="emailGenerationService" />
	</bean>

	<bean id="generateCustomerRegistrationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="CustomerRegistrationEmailTemplate" />
	</bean>

	<bean id="generateForgottenPasswordEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ForgottenPasswordEmailTemplate" />
	</bean>

	<bean id="generateOrderConfirmationEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderConfirmationEmailTemplate" />
	</bean>

	<bean id="generateDeliverySentEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="DeliverySentEmailTemplate" />
	</bean>

	<bean id="generateReadyForPickupEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="ReadyForPickupEmailTemplate" />
	</bean>

	<bean id="generateOrderCancelledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderCancelledEmailTemplate" />
	</bean>

	<bean id="generateOrderRefundEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderRefundEmailTemplate" />
	</bean>

	<bean id="generateOrderPartiallyCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyCanceledEmailTemplate" />
	</bean>
	<bean id="generateOrderPartiallyRefundedEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="OrderPartiallyRefundedEmailTemplate" />
	</bean>
	<bean id="generateNotPickedUpConsignmentCanceledEmail" parent="abstractGenerateEmailAction">
		<property name="frontendTemplateName" value="NotPickedUpConsignmentCanceledEmailTemplate" />
	</bean>

	<bean id="removeSentEmail"
		class="de.hybris.platform.acceleratorservices.process.email.actions.RemoveSentEmailAction"
		parent="abstractAction">
		<property name="modelService" ref="modelService" />
	</bean>

	<!-- Simple Suggestion Service -->
	<alias alias="simpleSuggestionService" name="defaultSimpleSuggestionService" />
	<bean id="defaultSimpleSuggestionService"
		class="org.training.core.suggestion.impl.DefaultSimpleSuggestionService">
		<property name="simpleSuggestionDao" ref="simpleSuggestionDao" />
	</bean>
	<alias alias="simpleSuggestionDao" name="defaultSimpleSuggestionDao" />
	<bean id="defaultSimpleSuggestionDao"
		class="org.training.core.suggestion.dao.impl.DefaultSimpleSuggestionDao"
		parent="abstractItemDao">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>

	<bean id="mccSiteUrlHelper" class="org.training.core.util.MccSiteUrlHelper">
		<property name="siteBaseUrlResolutionService" ref="siteBaseUrlResolutionService" />
		<property name="cmsSiteService" ref="cmsSiteService" />
	</bean>


	<!-- checkout flow configuration -->

	<alias alias="checkoutFlowStrategy" name="uiExperienceCheckoutFlowStrategy" />
	<bean id="uiExperienceCheckoutFlowStrategy"
		class="org.training.core.checkout.flow.impl.UiExperienceCheckoutFlowStrategy">
		<!-- This strategy looks up a strategy based on the current UI experience
			level -->
		<property name="uiExperienceService" ref="uiExperienceService" />

		<property name="experienceMappings">
			<map>
				<entry key="MOBILE" value-ref="multiStepCheckoutFlowStrategy" />
			</map>
		</property>

		<!-- Default to site specific checkout -->
		<property name="defaultStrategy" ref="pickUpInStoreCheckoutFlowStrategy" />
	</bean>

	<bean id="pickUpInStoreCheckoutFlowStrategy"
		class="org.training.core.checkout.flow.impl.PickUpInStoreCheckoutFlowStrategy">
		<property name="pickupStrategy" ref="pickupStrategy" />
		<property name="defaultStrategy" ref="siteCheckoutFlowStrategy" />
		<property name="multiStepCheckoutFlowStrategy" ref="multiStepCheckoutFlowStrategy" />
	</bean>

	<bean id="siteCheckoutFlowStrategy"
		class="org.training.core.checkout.flow.impl.SiteCheckoutFlowStrategy">
		<!-- This strategy looks up a strategy based on the current site UID -->
		<property name="cmsSiteService" ref="cmsSiteService" />
		<property name="siteMappings">
			<map>
				<entry key="electronics" value-ref="newCustomerCheckoutFlowStrategy" />
				<entry key="apparel-de" value-ref="multiStepCheckoutFlowStrategy" />
				<entry key="apparel-uk" value-ref="multiStepCheckoutFlowStrategy" />
			</map>
		</property>
		<!-- Default to SINGLE step checkout -->
		<property name="defaultStrategy" ref="multiStepCheckoutFlowStrategy" />
	</bean>

	<bean id="newCustomerCheckoutFlowStrategy"
		class="org.training.core.checkout.flow.impl.NewCustomerCheckoutFlowStrategy">
		<!-- This strategy works out if the user has created any data -->
		<property name="userService" ref="userService" />
		<property name="customerAccountService" ref="customerAccountService" />
		<property name="defaultStrategy" ref="multiStepCheckoutFlowStrategy" />
		<property name="newCustomerStrategy" ref="multiStepCheckoutFlowStrategy" />
	</bean>


	<bean id="multiStepCheckoutFlowStrategy"
		class="org.training.core.checkout.flow.impl.FixedCheckoutFlowStrategy">
		<property name="checkoutFlow" value="MULTISTEP" />
	</bean>

	<!--Checkout PCI Strategies -->
	<alias alias="checkoutPciStrategy" name="configuredCheckoutPciStrategy" />
	<bean id="configuredCheckoutPciStrategy"
		class="org.training.core.checkout.pci.impl.ConfiguredCheckoutPciStrategy">
		<!-- This strategy looks in the session to see if HOP is the chosen option.
			HOP is only valid if configured in the application properties file. Defaults
			to wsCheckoutPciStrategy. -->
		<property name="siteConfigService" ref="siteConfigService" />

		<!-- Default to the wsCheckoutPciStrategy -->
		<property name="defaultCheckoutPciStrategy" ref="wsCheckoutPciStrategy" />
	</bean>

	<bean id="wsCheckoutPciStrategy"
		class="org.training.core.checkout.pci.impl.FixedCheckoutPciStrategy">
		<!-- Use the Payment extension web services to create credit card details -->
		<property name="subscriptionPciOption" value="DEFAULT" />
	</bean>
	<bean id="hopCheckoutPciStrategy"
		class="org.training.core.checkout.pci.impl.FixedCheckoutPciStrategy">
		<!-- Use the Hosted Order Payment to create credit card details -->
		<property name="subscriptionPciOption" value="HOP" />
	</bean>


</beans>
